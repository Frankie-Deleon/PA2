import java.util.Scanner;


public class DeleonOlsenON1PA2
{
  private static Scanner input = new Scanner(System.in);
  private static String monthNo;
  private static String salesRep;
  private static String quarter;
  private static double quarterlySales;
  private static int qtrCounter;
  private static int noOfQtrs;

  public static void main(String[] args)
  {
    double salesRevenue;
    double annualSales;
    double projectedSales;
    double percOfTargetCo;
    double percOfTargetRep;
    int qtrChoice;
    int monthCounter;
    int noOfMonths;
    int noSalesReps;
    int salesRepCtr;

    System.out.printf("%nWhat is the projected annual sales for Tandem? "); //Prompt 1
    while (!input.hasNextDouble()) //validate for a floating point using a while loop.
    {
      input.next();
      System.out.printf("%nNOT a valid floating-point! Please re-enter the projected sales for Tandem: ");
    }
    projectedSales = input.nextDouble(); //gather input for projectedSales



    System.out.printf("%nHow many sales reps work for Tandem? "); //Prompt 2
    while (!input.hasNextInt()) //validate for a integer using a while loop.
    {
      input.next();
      System.out.printf("%nNOT a valid integer! Please re-enter the projected sales reps for Tandem: ");
    }
    noSalesReps = input.nextDouble(); //gather input for number of sales reps.


    do //begin do-while loop.
    {
      qtrCounter = 1; //Reinitialize qtrCounter to 1.
      quarterlySales = 0; //Zero out quarterlySales.
      salesRepCtr++; //Post-increment salesRepCtr.

      promptSalesRep(); //Call promptSalesRep().
      promptNoQtrs(); // Call promptNoQtrs().

      while(qtrCounter <= noOfQtrs) //Nested while loop controls the number of quarters.
      {
        monthCounter = 1; //Initialize monthCounter to 1.
        chooseQtr(); //Call chooseQtr().

        while(monthCounter <= determineMonthNo())//Nested, nested while loop controls the number of months within a quarter.
        {
          determineMonthNo(); //Call determineMonthNo().
          promptSalesRevenue(); //Call promptSalesRevenue().
          quarterlySales += salesRevenue; //Use combined assignment operator to add salesRevenue to quarterlySales.
          ++monthCounter;//Pre-increment monthCounter.
        }
      }


       annualSales += quarterlySales; //Use combined assignment operator to add quarterlySales to annualSales.
       ++qtrCounter; //. Pre-increment qtrCounter.
       printSalesRevReport(); //Call printSalesRepRevReport().

       percOfTargetRep = quarterlySales / (projectedSales/noSalesReps); //Calculate the percOfTargetRep which determines whether the sales rep is on target for their portion of the projected sales.

       if(noOfQtrs < 4) //if the noOfQtrs is less than 4
       {
                  
        /*String firstName = salesRep.substring(0, salesRep.indexOf(' '));

        String message = (percOfTargetRep >= 50) ? 
        
        "Keep up the GOOD work, " + firstName.substring(0, 1)
        
        .toUpperCase() + firstName.substring(1) + ". 
        
        There is a possible year-end bonus!\n" :                       
        
                            "Sales are lagging behind projections.\n"; System.out.println(message);
        
        
        /*Still need ternary operation to test if percOfTargetRep is greater than or equal to 50,
         if so print where the substring() grabs the first name and uppercases the first letter.
         Use the following message as the first value which will have no semicolon at the end.
         */
         System.out.printf("%nKeep up the GOOD work, %s. " + "There is a possible year-end bonus!%n", salesRep.substring(0, salesRep.indexOf(' ')).substring(0, 1).toUpperCase() + salesRep.substring(1, salesRep.indexOf(' ')));
       }
       else
       {
         System.out.printf("%nSo far sales are lagging behind projections.%n");
       }
       System.out.printf("%nCORPORATE SALES PERFORMANCE%n");
          /*Use a ternary operation within a printf() to test if percOfTargetCo is
           greater than or equal to 100, if it is print the message exactly as seen
           using the proper line advancing.
           */

        /*System.out.printf("CORPORATE SALES PERFORMANCE%n%s%n", (percOfTargetCo >= 100) ? "It's been a GOOD year so far.
            There could be a year-end bonus of about 2-5% if we can keep on top of our sales goals. Thank you all and please
             continue your excellent effort!\n" : "");*/
       
             System.out.printf("%nIt's been a GOOD year so far. There could be a year-end bonus of about 2-5% if we can keep on top of our sales goals. Thank you all and please continue your excellent effort!%n");
    }
    System.exit(0);

    public static void promptSalesRep(int salesRepCtr)
      int spaceCount = 0;
    {
      for(char blank : salesRep.toCharArray())
      {
        if(blank =='')
        {
          spaceCount++;
          }
      }
      StringBuilder rep = new StringBuilder(salesRep);
      rep.setCharAt(0, salesRep.toUpperCase().charAt(0));
      index = salesRep.indexOf('');
      for(int i = 1; i <= spaceCount; i++)
      {
        rep.setCharAt(++index, salesRep.toUpperCase().charAt(index));
        index = salesRep.indexOf('', index);
      }
      salesRep = rep.toString();
    }
    public static void promptNoQtrs()
    {
     //prompt
    }
    public static int chooseQtr()
    {
      //declare local varibale
      //prompt
    }
    public int determineMonthNo(int monthCounter)
    {
      //use switch
    }
    public static double promptSalesRevenue()
    {
      //declare local variable
      //prompt
    }
    public static void printSalesRepRevReport()
    {
      //declare local varibale
      //print final output
    }
  }